# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '730f2a01-013f-4748-9637-27eb316a062b'
  imageRepository: 'archithdotnetdemo'
  containerRegistry: 'archithacr.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'archithacr9bb8-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Name of the new namespace being created to deploy the PR changes.
  k8sNamespaceForPR: 'review-app-$(System.PullRequest.PullRequestId)'

stages:
- stage: Build
  displayName: Build stage
  jobs:
    - job: Build
      displayName: Build
      pool:
        vmImage: $(vmImageName)
      steps:
        - task: Docker@2
          displayName: Build and push an image to container registry
          inputs:
            command: buildAndPush
            repository: $(imageRepository)
            dockerfile: $(dockerfilePath)
            containerRegistry: $(dockerRegistryServiceConnection)
            tags: |
              $(tag)

        - upload: manifests
          artifact: manifests

- stage: DeployTest
  displayName: Deploy to Test
  dependsOn: Build
  jobs:
    - deployment: DeployTest
      displayName: Deploy to Test
      condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')))
      environment: 'Test'
      variables:
        deploymentFile: 'deployment-test.yml'
      steps:
        - script: kubectl apply -f $(deploymentFile) -n test

- stage: DeployProd
  displayName: Deploy to Prod
  dependsOn: Build
  jobs:
    - deployment: DeployProd
      displayName: Deploy to Prod
      condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')))
      environment: 'Production'
      variables:
        deploymentFile: 'deployment-prod.yml'
      steps:
        - script: kubectl apply -f $(deploymentFile) -n prod
